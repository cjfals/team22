<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.itwillbs.mapper.adminMapper">
	
	<!-- 모든 회원 조회하기 + 검색 + 페이징  -->
	<select id="getMemberList" parameterType="hashMap" resultType="MemberVO">
		select * from member
	<if test='searchType.equals("id")'>
          where member_id LIKE concat('%', #{keyword}, '%')
    </if>
    <if test='searchType.equals("email")'>
          where member_email LIKE concat('%', #{keyword}, '%')
    </if>
	     limit #{displayPost}, #{postNum}		
	</select>
	
	<!-- 모든 회원 수 + 검색적용 -->
	<select id="searMemlist" parameterType="hashMap" resultType="int">
	    select count(member_num) from member
	<if test='searchType.equals("id")'>
          where member_id LIKE concat('%', #{keyword}, '%')
    </if>
    <if test='searchType.equals("email")'>
          where member_email LIKE concat('%', #{keyword}, '%')
    </if>
	</select>

	
	<!-- 회원 개인 조회  -->
	  <select id="getmem" resultType="MemberVO">
	     select * from member
	     where member_num=#{member_num}
	  </select>
	  
	<!-- 모든 회원 수(명) 조회  -->
	  <select id="countMember" resultType="int">
	    select count(member_num)
        from member	  
	  </select>
	<!-- 모든 회원 수(명) 조회  -->
	
	
	
	
	<!-- 모든 판매 상품 조회하기  -->
	<select id="getProductList" resultType="ProductVO">
		select * from product
	</select>
	
	<!-- 모든 상품 개수 조회  -->
	  <select id="countProduct" resultType="int">
	    select count(product_num)
        from product
	  </select>
	  
	<!-- 모든 경매 상품 조회  -->  
	 <select id="getAuctionList" resultType="AuctionVO">
	    select * from auction
	 </select>
	
	<!-- 모든 랜덤 상품 조회  -->
	  <select id="getRandomList" resultType="RandomVO">
	    select * from random
	  </select>
	
	
	<!-- 모든 구매내역 조회  -->
	  <select id="getbuyList" resultType="map">
	   select t.buy_mem_id, t.sell_mem_id, p.product_cate, p.product_title,p.product_price
       from trade t join product p
       on t.prod_num = p.product_num
       where t.t_div = 1;	  
	  </select>
	<!-- 모든 구매내역 조회  -->
	
	<!-- 모든 판매내역 조회  -->
	  <select id="getsellList" resultType="map">
	   select t.buy_mem_id, t.sell_mem_id, p.product_cate, p.product_title,p.product_price
       from trade t join product p
       on t.prod_num = p.product_num
       where t.t_div = 2;	  
	  </select>	
	
	<!-- 모든 거래내역 수 조회  -->
	<select id="countTrade" resultType="int">
	  select count(t_num)
      from trade;	
	</select>

	
	
	<!-- 모든 문의사항 조회 + 검색 + 페이징 -->
	<select id="getCsList" parameterType="hashMap" resultType="CustomerserviceVO">
	  select * from customerservice
	 <if test='searchType.equals("writer")'>
          where mem_id LIKE concat('%', #{keyword}, '%')
    </if>
    <if test='searchType.equals("title")'>
          where cs_sub LIKE concat('%', #{keyword}, '%')
    </if> 
	  order by cs_num desc
	  limit #{displayPost}, #{postNum}
	</select>
	
	<!-- 문의사항 수 + 검색 -->
	 <select id="searCslist" parameterType="hashMap" resultType="int">
	    select count(cs_num) from customerservice
	  <if test='searchType.equals("writer")'>
          where mem_id LIKE concat('%', #{keyword}, '%')
      </if>
      <if test='searchType.equals("title")'>
          where cs_sub LIKE concat('%', #{keyword}, '%')
      </if> 
   </select>
	
	<!-- 문의사항 글개수 조회 -->
	  <select id="countCs" resultType="int">
	    select count(cs_num)
	    from customerservice
	  </select>
	
	
	
	<!-- 모든 공지사항 조회  + 검색 + 페이징(관리자)   -->
	<select id="getNotiList" parameterType="hashMap" resultType="NoticeVO">
	    select * from notice
	 <if test='searchType.equals("writer")'>
          where noti_title LIKE concat('%', #{keyword}, '%')
     </if>
	  order by noti_num desc
	  limit #{displayPost}, #{postNum}
	</select>
	
	<!--  공지사항 수 + 검색 -->
	 <select id="searNotilist" parameterType="hashMap" resultType="int">
	    select count(cs_num) from customerservice
	 <if test='searchType.equals("writer")'>
          where noti_title LIKE concat('%', #{keyword}, '%')
     </if> 
   </select>
	



	<!-- 공지사항 등록하기  -->
	  <insert id="writeNotice">
	    insert into notice (noti_title,noti_content,noti_image,noti_image1,noti_image2)
	    values(#{noti_title},#{noti_content},#{noti_image},#{noti_image1},#{noti_image2})
	  </insert>	
	<!-- 공지사항 등록하기  -->
	
	
	<!-- 모든 공지사항 조회하기 + 페이징 + 검색  -->
	    <select id="getNoticeList" parameterType="hashMap" resultType="NoticeVO">
	       select * from notice  
          <if test='searchType.equals("all")'>
            where noti_title LIKE concat('%', #{keyword}, '%')
            or noti_content LIKE concat('%', #{keyword}, '%')
          </if>
	       order by noti_num desc
	       limit #{displayPost}, #{postNum}
	    </select>
	
	<!-- 공지사항 글 개수 조회 + 검색 적용 -->
	    <select id="searcountNotice" parameterType="hashMap" resultType="int"> 
	      select count(noti_num) from notice
          <if test='searchType.equals("all")'>
            where noti_title LIKE concat('%', #{keyword}, '%')
            or noti_content LIKE concat('%', #{keyword}, '%')
          </if>
	    </select>

	
	<!-- 공지사항 수  -->
	  <select id="countNotice" resultType="int"> 
	      select count(noti_num)
          from notice;
	  </select>
	<!-- 공지사항 수  -->
	
	<!-- 공지사항 조회수 1증가  -->
	   <update id="addReadcnt">
	     update notice set noti_readcount = noti_readcount + 1
         where noti_num =#{noti_num}
	   </update>
	<!-- 공지사항 조회수 1증가  -->
	
	<!-- 글 번호에 해당하는 글정보 조회  -->
	   <select id="getNotice" resultType="NoticeVO">
	     select * from notice
	     where noti_num=#{noti_num}
	   </select>
	<!-- 글 번호에 해당하는 글정보 조회  -->
	
	
	<!-- 공지사항 수정하기  -->
  <update id="updateNotice">
     UPDATE notice
     <set>
         <if test="noti_title != null">noti_title = #{noti_title},</if>
         <if test="noti_content != null">noti_content = #{noti_content},</if>
         <if test="noti_image != null">noti_image = #{noti_image},</if>
         <if test="noti_image1 != null">noti_image1 = #{noti_image1},</if>
         <if test="noti_image2 != null">noti_image2 = #{noti_image2},</if>
    </set>
      WHERE noti_num = #{noti_num}
  </update>
	  
	<!-- 공지사항 삭제하기  -->
	   <delete id="deleteNotice">
        delete from notice
	    where noti_num=#{noti_num}	   
	   </delete>

	
	

</mapper>  